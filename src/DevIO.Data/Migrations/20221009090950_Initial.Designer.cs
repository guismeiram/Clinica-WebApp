// <auto-generated />
using System;
using DevIO.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DevIO.Data.Migrations
{
    [DbContext(typeof(ClinicaDbContext))]
    [Migration("20221009090950_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DevIO.Bussines.Models.Clinica", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ClinicaId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClinicaId")
                        .IsUnique();

                    b.ToTable("Clinica");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Consulta", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ClinicaId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("MedicoId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PacienteId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClinicaId");

                    b.HasIndex("MedicoId");

                    b.HasIndex("PacienteId")
                        .IsUnique();

                    b.ToTable("Consulta");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Convenio", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NCarteira")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Vencimento")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Convenio");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Endereco", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EnderecoId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MedicoId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId")
                        .IsUnique();

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Especialidade", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Especialidade");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Medico", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Crm")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Idade")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Medico", (string)null);
                });

            modelBuilder.Entity("DevIO.Bussines.Models.MedicoEspecialidade", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EspecialidadeId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MedicoId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EspecialidadeId");

                    b.HasIndex("MedicoId");

                    b.ToTable("MedicoEspecialidade");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Paciente", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Idade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Paciente");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.PacienteTipoPagamento", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PacienteId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TipoPagamentoId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.HasIndex("TipoPagamentoId");

                    b.ToTable("PacienteTipoPagamento");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Telefone", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ddd")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("numero")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Telefone");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.TelefoneClinica", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ClinicaId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TelefoneId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ClinicaId");

                    b.HasIndex("TelefoneId");

                    b.ToTable("TelefoneClinica");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.TelefoneMedico", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MedicoId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TelefoneId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("MedicoId");

                    b.HasIndex("TelefoneId");

                    b.ToTable("TelefoneMedico");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.TelefonePaciente", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PacienteId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TelefoneId")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PacienteId");

                    b.HasIndex("TelefoneId");

                    b.ToTable("TelefonePaciente");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.TipoPagamento", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ConveniosId")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Pagamentos")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConveniosId");

                    b.ToTable("TipoPagamento");
                });

            modelBuilder.Entity("DevIO.Bussines.PacienteConvenio", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ConvenioId")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ConvenioId");

                    b.ToTable("PacienteConvenio");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Clinica", b =>
                {
                    b.HasOne("DevIO.Bussines.Models.Endereco", "Endereco")
                        .WithOne("Clinica")
                        .HasForeignKey("DevIO.Bussines.Models.Clinica", "ClinicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Consulta", b =>
                {
                    b.HasOne("DevIO.Bussines.Models.Clinica", "Clinica")
                        .WithMany("Consultas")
                        .HasForeignKey("ClinicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevIO.Bussines.Models.Medico", "Medico")
                        .WithMany("Consultas")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevIO.Bussines.Models.Paciente", "Paciente")
                        .WithOne("Consulta")
                        .HasForeignKey("DevIO.Bussines.Models.Consulta", "PacienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Clinica");

                    b.Navigation("Medico");

                    b.Navigation("Paciente");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Endereco", b =>
                {
                    b.HasOne("DevIO.Bussines.Models.Medico", "Medico")
                        .WithOne("Endereco")
                        .HasForeignKey("DevIO.Bussines.Models.Endereco", "MedicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.MedicoEspecialidade", b =>
                {
                    b.HasOne("DevIO.Bussines.Models.Especialidade", "Especialidade")
                        .WithMany("Medicos")
                        .HasForeignKey("EspecialidadeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevIO.Bussines.Models.Medico", "Medico")
                        .WithMany("Especialidades")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Especialidade");

                    b.Navigation("Medico");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.PacienteTipoPagamento", b =>
                {
                    b.HasOne("DevIO.Bussines.Models.Paciente", "Paciente")
                        .WithMany("PacienteTipoPagamentos")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevIO.Bussines.Models.TipoPagamento", "TipoPagamento")
                        .WithMany("PacienteTipoPagamentos")
                        .HasForeignKey("TipoPagamentoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("TipoPagamento");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.TelefoneClinica", b =>
                {
                    b.HasOne("DevIO.Bussines.Models.Clinica", "Clinica")
                        .WithMany("TelefoneClinicas")
                        .HasForeignKey("ClinicaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevIO.Bussines.Models.Telefone", "Telefone")
                        .WithMany("TelefoneClinicas")
                        .HasForeignKey("TelefoneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Clinica");

                    b.Navigation("Telefone");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.TelefoneMedico", b =>
                {
                    b.HasOne("DevIO.Bussines.Models.Medico", "Medico")
                        .WithMany("TelefoneMedicos")
                        .HasForeignKey("MedicoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevIO.Bussines.Models.Telefone", "Telefone")
                        .WithMany("TelefoneMedicos")
                        .HasForeignKey("TelefoneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Medico");

                    b.Navigation("Telefone");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.TelefonePaciente", b =>
                {
                    b.HasOne("DevIO.Bussines.Models.Paciente", "Paciente")
                        .WithMany("TelefonePacientes")
                        .HasForeignKey("PacienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevIO.Bussines.Models.Telefone", "Telefone")
                        .WithMany("TelefonePacientes")
                        .HasForeignKey("TelefoneId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Paciente");

                    b.Navigation("Telefone");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.TipoPagamento", b =>
                {
                    b.HasOne("DevIO.Bussines.Models.Convenio", "Convenios")
                        .WithMany()
                        .HasForeignKey("ConveniosId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Convenios");
                });

            modelBuilder.Entity("DevIO.Bussines.PacienteConvenio", b =>
                {
                    b.HasOne("DevIO.Bussines.Models.Convenio", null)
                        .WithMany("PacienteConvenio")
                        .HasForeignKey("ConvenioId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Clinica", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("TelefoneClinicas");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Convenio", b =>
                {
                    b.Navigation("PacienteConvenio");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Endereco", b =>
                {
                    b.Navigation("Clinica")
                        .IsRequired();
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Especialidade", b =>
                {
                    b.Navigation("Medicos");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Medico", b =>
                {
                    b.Navigation("Consultas");

                    b.Navigation("Endereco")
                        .IsRequired();

                    b.Navigation("Especialidades");

                    b.Navigation("TelefoneMedicos");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Paciente", b =>
                {
                    b.Navigation("Consulta")
                        .IsRequired();

                    b.Navigation("PacienteTipoPagamentos");

                    b.Navigation("TelefonePacientes");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.Telefone", b =>
                {
                    b.Navigation("TelefoneClinicas");

                    b.Navigation("TelefoneMedicos");

                    b.Navigation("TelefonePacientes");
                });

            modelBuilder.Entity("DevIO.Bussines.Models.TipoPagamento", b =>
                {
                    b.Navigation("PacienteTipoPagamentos");
                });
#pragma warning restore 612, 618
        }
    }
}
